<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>run specjbb with specified jdk</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>JDK_WORKSPACE</name>
          <description>Root of source workspace or binary jdk image to be used to run specjbb</description>
          <defaultValue>jdk14</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JBB_RUN_NAME</name>
          <description>The name of run of specjbb</description>
          <defaultValue>specjbb_test_run</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>source $JENKINS_HOME/scripts/`uname -n`_config.sh

cd $JENKINS_HOME/scripts/specjbb_scripts

tar czf - runscripts | ssh ${JBB_REMOTE} &quot;mkdir -p ${JBB_RUN_ROOT}/${JBB_RUN_NAME}; cd ${JBB_RUN_ROOT}/${JBB_RUN_NAME} &amp;&amp; tar xzvf -&quot;
scp $JENKINS_HOME/scripts/specjbb_scripts/bin/specjbb.py $JBB_REMOTE:${JBB_RUN_ROOT}/${JBB_RUN_NAME}

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>source $JENKINS_HOME/scripts/`uname -n`_config.sh

_jdk=${JDK_WORKSPACE_ROOT}/${JDK_WORKSPACE}
_jdk_name=${JDK_WORKSPACE}

if [ -f ${JDK_WORKSPACE_ROOT}/${JDK_WORKSPACE}/build/linux-aarch64-server-release/images/jdk/bin/java ]
then
   _jdk=${JDK_WORKSPACE_ROOT}/${JDK_WORKSPACE}/build/linux-aarch64-server-release/images/jdk
   _jdk_name=&quot;jdk&quot;
fi 
  
if [ ! -f ${_jdk}/bin/java ]
then 
  echo &quot;No java executable found&quot;
  exit 255
fi  

cd ${_jdk}/..
tar czf - ${_jdk_name} | ssh ${JBB_REMOTE} &quot;cd ${JBB_RUN_ROOT}/${JBB_RUN_NAME} &amp;&amp; tar xzvf -&quot;

echo &quot;export JAVA_HOME=${JBB_RUN_ROOT}/${JBB_RUN_NAME}/${_jdk_name}; export JBB_HOME=${JBB_HOME}; cd runscripts &amp;&amp; /bin/sh ./runme.sh 1&quot; | ssh ${JBB_REMOTE} &quot;cd ${JBB_RUN_ROOT}/${JBB_RUN_NAME} &amp;&amp; tee runme_tmp.sh&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>source $JENKINS_HOME/scripts/`uname -n`_config.sh

ssh -n $JBB_REMOTE &quot;cd ${JBB_RUN_ROOT}/${JBB_RUN_NAME} &amp;&amp; sudo /bin/sh ./runme_tmp.sh&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>source $JENKINS_HOME/scripts/`uname -n`_config.sh

ssh -n $JBB_REMOTE &quot;cd ${JBB_RUN_ROOT}/${JBB_RUN_NAME} &amp;&amp; /usr/bin/env python3 ./specjbb.py -o ${JBB_RUN_NAME}.xlsx&quot;
scp -r ${JBB_REMOTE}:${JBB_RUN_ROOT}/${JBB_RUN_NAME}/${JBB_RUN_NAME}.xlsx .
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>